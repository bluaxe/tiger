1c1
< /* The following code was generated by JFlex 1.4.1 on 13-12-9 下午8:35 */
---
> /* The following code was generated by JFlex 1.4.1 on 13-12-9 下午8:25 */
20c20
<  * on 13-12-9 下午8:35 from the specification file
---
>  * on 13-12-9 下午8:25 from the specification file
59,64c59,64
<     "\3\0\6\1\1\2\1\3\1\1\1\4\1\5\1\6"+
<     "\1\7\1\10\10\1\1\11\2\1\5\0\1\12\1\13"+
<     "\1\14\1\15\1\16\6\0\1\17\2\0\1\20\1\21"+
<     "\2\0\1\22\4\0\1\23\1\0\1\24\1\25\1\26"+
<     "\2\0\1\27\1\30\5\0\1\31\1\32\1\0\1\33"+
<     "\1\34\5\0\1\35\2\0";
---
>     "\10\0\1\1\1\2\1\0\1\3\1\4\1\5\1\6"+
>     "\1\7\10\0\1\10\7\0\1\11\1\12\1\13\1\14"+
>     "\1\15\6\0\1\16\2\0\1\17\1\20\2\0\1\21"+
>     "\4\0\1\22\1\0\1\23\1\24\1\25\2\0\1\26"+
>     "\1\27\5\0\1\30\1\31\1\0\1\32\1\33\4\0"+
>     "\1\34\2\0";
67c67
<     int [] result = new int[83];
---
>     int [] result = new int[81];
93,102c93,102
<     "\0\u0118\0\151\0\151\0\u013b\0\151\0\151\0\151\0\151"+
<     "\0\151\0\u015e\0\u0181\0\u01a4\0\u01c7\0\u01ea\0\u020d\0\u0230"+
<     "\0\u0253\0\151\0\u0276\0\u0299\0\u02bc\0\u02df\0\u0302\0\u0325"+
<     "\0\u0348\0\151\0\151\0\151\0\151\0\151\0\u036b\0\u038e"+
<     "\0\u03b1\0\u03d4\0\u03f7\0\u041a\0\151\0\u043d\0\u0460\0\151"+
<     "\0\151\0\u0483\0\u04a6\0\151\0\u04c9\0\u04ec\0\u050f\0\u0532"+
<     "\0\151\0\u0555\0\151\0\151\0\151\0\u0578\0\u059b\0\151"+
<     "\0\151\0\u05be\0\u05e1\0\u0604\0\u0627\0\u064a\0\151\0\151"+
<     "\0\u066d\0\151\0\u0690\0\u06b3\0\214\0\u06d6\0\u06f9\0\u071c"+
<     "\0\151\0\u073f\0\u0762";
---
>     "\0\u0118\0\u0118\0\u013b\0\u0118\0\u0118\0\u0118\0\u0118\0\u0118"+
>     "\0\u015e\0\u0181\0\u01a4\0\u01c7\0\u01ea\0\u020d\0\u0230\0\u0253"+
>     "\0\u0118\0\u0276\0\u0299\0\u02bc\0\u02df\0\u0302\0\u0325\0\u0348"+
>     "\0\u0118\0\u0118\0\u0118\0\u0118\0\u0118\0\u036b\0\u038e\0\u03b1"+
>     "\0\u03d4\0\u03f7\0\u041a\0\u0118\0\u043d\0\u0460\0\u0118\0\u0118"+
>     "\0\u0483\0\u04a6\0\u0118\0\u04c9\0\u04ec\0\u050f\0\u0532\0\u0118"+
>     "\0\u0555\0\u0118\0\u0118\0\u0118\0\u0578\0\u059b\0\u0118\0\u0118"+
>     "\0\u05be\0\u05e1\0\u0604\0\u0627\0\u064a\0\u0118\0\u0118\0\u066d"+
>     "\0\u0118\0\u0690\0\u06b3\0\u06d6\0\u06f9\0\u071c\0\u0118\0\u073f"+
>     "\0\u0762";
105c105
<     int [] result = new int[83];
---
>     int [] result = new int[81];
128,147c128,146
<     "\1\4\1\5\1\6\1\7\1\4\1\10\1\11\2\4"+
<     "\1\12\2\4\1\13\1\14\1\15\1\16\1\17\1\20"+
<     "\1\15\1\21\1\22\1\4\1\23\2\4\1\24\1\25"+
<     "\1\4\1\26\1\4\1\27\2\4\1\30\1\31\14\4"+
<     "\1\32\43\4\1\33\1\34\24\4\45\0\1\35\72\0"+
<     "\1\36\1\0\1\37\20\0\1\40\12\0\1\41\10\0"+
<     "\1\42\34\0\1\43\43\0\1\44\2\0\1\45\24\0"+
<     "\1\46\30\0\1\47\42\0\1\50\74\0\1\51\1\52"+
<     "\5\0\1\53\46\0\1\54\65\0\1\55\35\0\1\56"+
<     "\30\0\1\57\46\0\1\60\41\0\1\61\30\0\1\62"+
<     "\72\0\1\63\44\0\1\64\7\0\1\65\100\0\1\66"+
<     "\6\0\1\67\40\0\1\70\44\0\1\71\72\0\1\72"+
<     "\11\0\1\73\71\0\1\74\14\0\1\75\44\0\1\76"+
<     "\37\0\1\77\41\0\1\44\74\0\1\100\10\0\1\101"+
<     "\64\0\1\102\42\0\1\103\31\0\1\104\61\0\1\105"+
<     "\12\0\1\106\65\0\1\107\44\0\1\110\16\0\1\111"+
<     "\41\0\1\112\44\0\1\113\44\0\1\114\35\0\1\115"+
<     "\3\0\1\116\2\0\1\113\70\0\1\117\12\0\1\120"+
<     "\70\0\1\121\15\0\1\122\41\0\1\123\37\0\1\113"+
<     "\37\0";
---
>     "\1\0\1\4\1\5\1\6\1\0\1\7\1\10\2\0"+
>     "\1\11\2\0\1\12\1\13\1\14\1\15\1\16\1\17"+
>     "\1\14\1\20\1\21\1\0\1\22\2\0\1\23\1\24"+
>     "\1\0\1\25\1\0\1\26\2\0\1\27\1\30\14\0"+
>     "\1\31\43\0\1\32\1\33\26\0\1\34\72\0\1\35"+
>     "\1\0\1\36\20\0\1\37\12\0\1\40\10\0\1\41"+
>     "\34\0\1\42\43\0\1\43\2\0\1\44\67\0\1\45"+
>     "\30\0\1\46\42\0\1\47\74\0\1\50\1\51\5\0"+
>     "\1\52\46\0\1\53\65\0\1\54\35\0\1\55\30\0"+
>     "\1\56\46\0\1\57\41\0\1\60\30\0\1\61\72\0"+
>     "\1\62\44\0\1\63\7\0\1\64\100\0\1\65\6\0"+
>     "\1\66\40\0\1\67\44\0\1\70\72\0\1\71\11\0"+
>     "\1\72\71\0\1\73\14\0\1\74\44\0\1\75\37\0"+
>     "\1\76\41\0\1\43\74\0\1\77\10\0\1\100\64\0"+
>     "\1\101\42\0\1\102\31\0\1\103\61\0\1\104\12\0"+
>     "\1\105\65\0\1\106\44\0\1\107\16\0\1\110\41\0"+
>     "\1\111\44\0\1\112\44\0\1\113\35\0\1\4\3\0"+
>     "\1\114\2\0\1\112\70\0\1\115\12\0\1\116\70\0"+
>     "\1\117\15\0\1\120\41\0\1\121\37\0\1\112\37\0";
188,191c187,190
<     "\3\0\1\11\5\1\2\11\1\1\5\11\10\1\1\11"+
<     "\2\1\5\0\5\11\6\0\1\11\2\0\2\11\2\0"+
<     "\1\11\4\0\1\11\1\0\3\11\2\0\2\11\5\0"+
<     "\2\11\1\0\1\11\1\1\5\0\1\11\2\0";
---
>     "\10\0\2\11\1\0\5\11\10\0\1\11\7\0\5\11"+
>     "\6\0\1\11\2\0\2\11\2\0\1\11\4\0\1\11"+
>     "\1\0\3\11\2\0\2\11\5\0\2\11\1\0\1\11"+
>     "\1\1\4\0\1\11\2\0";
194c193
<     int [] result = new int[83];
---
>     int [] result = new int[81];
619,623c618
<         case 1: 
<           { System.out.print(yytext());
<           }
<         case 30: break;
<         case 26: 
---
>         case 25: 
626,627c621,622
<         case 31: break;
<         case 19: 
---
>         case 29: break;
>         case 18: 
630,631c625,626
<         case 32: break;
<         case 25: 
---
>         case 30: break;
>         case 24: 
634,635c629,630
<         case 33: break;
<         case 18: 
---
>         case 31: break;
>         case 17: 
638,639c633,634
<         case 34: break;
<         case 8: 
---
>         case 32: break;
>         case 7: 
642,643c637,638
<         case 35: break;
<         case 20: 
---
>         case 33: break;
>         case 19: 
646,647c641,642
<         case 36: break;
<         case 15: 
---
>         case 34: break;
>         case 14: 
650,651c645,646
<         case 37: break;
<         case 9: 
---
>         case 35: break;
>         case 8: 
654,655c649,650
<         case 38: break;
<         case 14: 
---
>         case 36: break;
>         case 13: 
658,659c653,654
<         case 39: break;
<         case 5: 
---
>         case 37: break;
>         case 4: 
662,663c657,658
<         case 40: break;
<         case 11: 
---
>         case 38: break;
>         case 10: 
666,667c661,662
<         case 41: break;
<         case 29: 
---
>         case 39: break;
>         case 28: 
670,671c665,666
<         case 42: break;
<         case 3: 
---
>         case 40: break;
>         case 2: 
674,675c669,670
<         case 43: break;
<         case 2: 
---
>         case 41: break;
>         case 1: 
678,679c673,674
<         case 44: break;
<         case 24: 
---
>         case 42: break;
>         case 23: 
682,683c677,678
<         case 45: break;
<         case 10: 
---
>         case 43: break;
>         case 9: 
686,687c681,682
<         case 46: break;
<         case 27: 
---
>         case 44: break;
>         case 26: 
690,691c685,686
<         case 47: break;
<         case 28: 
---
>         case 45: break;
>         case 27: 
694,695c689,690
<         case 48: break;
<         case 4: 
---
>         case 46: break;
>         case 3: 
698,699c693,694
<         case 49: break;
<         case 7: 
---
>         case 47: break;
>         case 6: 
702,703c697,698
<         case 50: break;
<         case 12: 
---
>         case 48: break;
>         case 11: 
706,707c701,702
<         case 51: break;
<         case 23: 
---
>         case 49: break;
>         case 22: 
710,711c705,706
<         case 52: break;
<         case 13: 
---
>         case 50: break;
>         case 12: 
714,715c709,710
<         case 53: break;
<         case 22: 
---
>         case 51: break;
>         case 21: 
718,719c713,714
<         case 54: break;
<         case 16: 
---
>         case 52: break;
>         case 15: 
722,723c717,718
<         case 55: break;
<         case 17: 
---
>         case 53: break;
>         case 16: 
726,727c721,722
<         case 56: break;
<         case 6: 
---
>         case 54: break;
>         case 5: 
730,731c725,726
<         case 57: break;
<         case 21: 
---
>         case 55: break;
>         case 20: 
734c729
<         case 58: break;
---
>         case 56: break;
745,779d739
<       }
<     }
<   }
< 
<   /**
<    * Runs the scanner on input files.
<    *
<    * This is a standalone scanner, it will print any unmatched
<    * text to System.out unchanged.
<    *
<    * @param argv   the command line, contains the filenames to run
<    *               the scanner on.
<    */
<   public static void main(String argv[]) {
<     if (argv.length == 0) {
<       System.out.println("Usage : java Tigerlex <inputfile>");
<     }
<     else {
<       for (int i = 0; i < argv.length; i++) {
<         Tigerlex scanner = null;
<         try {
<           scanner = new Tigerlex( new java.io.FileReader(argv[i]) );
<           while ( !scanner.zzAtEOF ) scanner.next_token();
<         }
<         catch (java.io.FileNotFoundException e) {
<           System.out.println("File not found : \""+argv[i]+"\"");
<         }
<         catch (java.io.IOException e) {
<           System.out.println("IO error scanning file \""+argv[i]+"\"");
<           System.out.println(e);
<         }
<         catch (Exception e) {
<           System.out.println("Unexpected exception:");
<           e.printStackTrace();
<         }
